# 1Ô∏è‚É£ Image de base l√©g√®re avec Python
FROM python:3.10-slim

# 2Ô∏è‚É£ Dossier de travail
WORKDIR /app

# 3Ô∏è‚É£ D√©pendances syst√®me pour aClic
RUN apt update && apt install -y libssl-dev libicu-dev && rm -rf /var/lib/apt/lists/*

# 4Ô∏è‚É£ Copier requirements.txt d‚Äôabord pour profiter du cache Docker
COPY requirements.txt .

# 5Ô∏è‚É£ Installer les d√©pendances Python (upgrade pip et install requirements)
RUN python -m pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt

# 6Ô∏è‚É£ Copier le code applicatif
COPY api_clearbus.py .
COPY storageid.py .
COPY wsgi.py .

# 7Ô∏è‚É£ V√©rifier gunicorn (debug, optionnel ‚Äî peut √™tre retir√© en prod stable)
RUN which gunicorn && gunicorn --version

# 8Ô∏è‚É£ Copier les binaires aClic
COPY aClic/aClic /usr/local/bin/aClic
COPY aClic/calculerTOTP /usr/local/bin/calculerTOTP

# 9Ô∏è‚É£ Copier les fichiers de config et certificats
COPY aClic/config /usr/local/bin/config
COPY aClic/config /app/config
COPY aClic/certs /app/certs

# üîê Donner les permissions d‚Äôex√©cution aux binaires
RUN chmod +x /usr/local/bin/aClic /usr/local/bin/calculerTOTP

# üîÅ Lancer Gunicorn au d√©marrage (4 workers, √©coute sur le port 5000)
CMD ["gunicorn", "-w", "4", "-b", "0.0.0.0:5000", "wsgi:app"]
